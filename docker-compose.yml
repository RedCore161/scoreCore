services:

  scoring-database:
    image: postgres:16
    container_name: scoring-database
    restart: unless-stopped
    ports:
      - "${LIMITED_ACCESS}${POSTGRES_PORT}:${POSTGRES_PORT}"
    env_file:
      - django.env
    networks:
      defaultnet:
        aliases:
          - scoring-database

  # Used for django websocket connections
  scoring-redis:
    image: redis:latest
    container_name: scoring-redis
    restart: always
    ports:
      - "6380:6379"
    networks:
      defaultnet:
        aliases:
          - scoring-redis

  # Django backend (using REST-API)
  scoring-backend:
    container_name: scoring-backend
    restart: unless-stopped
    env_file:
      - django.env
      - .env
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
      args:
        MEDIA_VOLUME: ${MEDIA_VOLUME}
        CONTROL_BACKEND_URL: ${CONTROL_BACKEND_URL}
        CONTROL_BACKEND_PORT: ${CONTROL_BACKEND_PORT}
        DB_HOST: ${POSTGRES_HOST}
        DB_PORT: ${POSTGRES_PORT}
    depends_on:
      - scoring-database
      - scoring-redis
    ports:
      - "${LIMITED_ACCESS}${CONTROL_BACKEND_PORT}:${CONTROL_BACKEND_PORT}"
    volumes:
      - ${MEDIA_VOLUME}:/usr/src/app/media
      - /var/run/docker.sock:/var/run/docker.sock:rw
    networks:
      defaultnet:
        aliases:
          - scoring-backend


  scoring-frontend:
    container_name: scoring-frontend
    restart: unless-stopped
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
      args:
        CONTROL_BACKEND_PORT: ${CONTROL_BACKEND_PORT}
        CONTROL_BACKEND_URL: ${CONTROL_BACKEND_URL}
    environment:
      - NODE_OPTIONS=--max-old-space-size=8196
      - MAX_OLD_SPACE_SIZE=8196
    ports:
      - "3000:80"
    networks:
      defaultnet:
        aliases:
          - scoring-frontend


  scoring-nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
    container_name: scoring-nginx
    restart: always
    ports:
      - "80:80"
    depends_on:
      - scoring-frontend
      - scoring-backend
    networks:
      defaultnet:
        aliases:
          - scoring.local
          - api.scoring.local

networks:
  defaultnet:
